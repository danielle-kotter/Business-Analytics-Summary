[["simple-regressions.html", "Chapter - 4 Simple regressions 4.1 Basics regressions 4.2 Prediction 4.3 Data problems", " Chapter - 4 Simple regressions knitr::opts_chunk$set(echo = TRUE, class.source = &quot;watch-out&quot;, options(scipen=999), out.width = &quot;100%&quot;, comment = &quot;&quot;, warning=FALSE, reticulate.repl.quiet = FALSE) Class given by: Walter Garcia-Fontes Literature used: (Jon Curwin and Eadson 2013) 4.1 Basics regressions Regressions, correlation and dummy‚Äôs Y = Dependent X = Explanatory Correlation cor(x, y) [1] 0.8068949 Creating the regression: To plot the regression model Evaluates the coefficient of the model Only the first column estimation model &lt;- lm(y ~ x, data = data) summary(model)$coef Estimate Std. Error t value Pr(&gt;|t|) (Intercept) -17.579095 6.7584402 -2.601058 0.012318816153809090 x 3.932409 0.4155128 9.463990 0.000000000001489836 summary(model)$coef[,1] (Intercept) x -17.579095 3.932409 4.1.1 Summarizing regressions: Using stargazer package library(stargazer) stargazer(lm(y~x, data=data), type=&quot;text&quot;) =============================================== Dependent variable: --------------------------- y ----------------------------------------------- x 3.932*** (0.416) Constant -17.579** (6.758) ----------------------------------------------- Observations 50 R2 0.651 Adjusted R2 0.644 Residual Std. Error 15.380 (df = 48) F Statistic 89.567*** (df = 1; 48) =============================================== Note: *p&lt;0.1; **p&lt;0.05; ***p&lt;0.01 # Multiple models adjacent model1 &lt;- lm(y~x, data=data) model2 &lt;- lm(x~y, data=data) stargazer(model1, model2, type=&quot;text&quot;) ========================================================== Dependent variable: ---------------------------- y x (1) (2) ---------------------------------------------------------- x 3.932*** (0.416) y 0.166*** (0.017) Constant -17.579** 8.284*** (6.758) (0.874) ---------------------------------------------------------- Observations 50 50 R2 0.651 0.651 Adjusted R2 0.644 0.644 Residual Std. Error (df = 48) 15.380 3.156 F Statistic (df = 1; 48) 89.567*** 89.567*** ========================================================== Note: *p&lt;0.1; **p&lt;0.05; ***p&lt;0.01 Using summary function: summary(lm(y~x)) Call: lm(formula = y ~ x) Residuals: Min 1Q Median 3Q Max -29.069 -9.525 -2.272 9.215 43.201 Coefficients: Estimate Std. Error t value Pr(&gt;|t|) (Intercept) -17.5791 6.7584 -2.601 0.0123 * x 3.9324 0.4155 9.464 0.00000000000149 *** --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Residual standard error: 15.38 on 48 degrees of freedom Multiple R-squared: 0.6511, Adjusted R-squared: 0.6438 F-statistic: 89.57 on 1 and 48 DF, p-value: 0.00000000000149 Confidence interval around slope confint(lm(y~x), level=0.95) 2.5 % 97.5 % (Intercept) -31.167850 -3.990340 x 3.096964 4.767853 Sub-sampling regression Specify dimensions [,]. First is row. Column, second. Selects the rows where age is larger than 5. Lower than 5. sub1 &lt;- summary(lm(y~x, data=data[&quot;speed&quot;&gt;=5,])) sub2 &lt;- summary(lm(y~x, data=data[&quot;speed&quot;&lt;=5,])) 4.1.2 Visualizing model Plotting regression plot(y~x,data=data, main=&quot;Title&quot;, ylab=&quot;yname&quot;, xlab=&quot;xname&quot; ) Including regression line: plot(y~x,data=data, main=&quot;Title&quot;, ylab=&quot;yname&quot;, xlab=&quot;xname&quot; ) abline(lm(y~x, data=data), col=&quot;blue&quot;) 4.1.2.1 Regression + dummy Y = Constant0 + B0 * X - Diff in means + B1 * variable1*2 Omitting the intercept: Shows the means separately and not the difference between means. Tests whether the expected counts are different from zero. lm(y ~ x - 1, data = data) Call: lm(formula = y ~ x - 1, data = data) Coefficients: x 2.909 4.2 Prediction model &lt;- lm(y~x) newdata &lt;- data.frame(variablename = c(1:50)) pred &lt;- predict(model, newdata = newdata) Prediction confidence interval: One value Multiple values from a existing data frame pred1 &lt;- predict(model, data.frame(valuename = x), interval = &quot;confidence&quot;, level=0.95) pred2 &lt;- predict(model, newdata = newdata, interval = &quot;confidence&quot;, level=0.95) Prediction interval One value Multiple values from a existing data frame pred1 &lt;- predict(model, data.frame(valuename = x), interval=&quot;predict&quot;,level=0.95) pred2 &lt;- predict(model, newdata, interval=&quot;predict&quot;,level=0.95) 4.2.1 Confidence and prediction plotting Adds: observed values, fitted line, confidence interval &amp; predicted interval. library(HH) fit &lt;- lm(y~x, data = data) ci.plot(fit) 4.2.2 Prediction with dummy variables Prediction = ùõº1+ùõº2Constant Dummy+ùõΩ1ùëÜùëñùëßùëí+ùõΩ2Slope Dummy 4.2.3 Prediction intervals examples Prediction fit &lt;- lm(y ~ x + d + d, data = data) pred &lt;- predict(fit, data.frame(VariableX = c(10), Dummy = c(1), Slopedummy = c(10)) ) Confidence interval prediction fit &lt;- lm(y ~ x + d + d, data = data) pred &lt;- predict(fit, data.frame(VariableX = c(10), Dummy = c(1), Slopedummy = c(10), interval=&quot;confidence&quot;)) Prediction interval fit &lt;- lm(y ~ x + d + d, data = data) pred &lt;- predict(fit, data.frame(VariableX = c(10), Dummy = c(1), Slopedummy = c(10), interval=&quot;predict&quot;)) 4.3 Data problems Residual plots plot(fit) Influential measure test im &lt;- influence.measures(fit) 4.3.1 Multicollinearity F-test fit &lt;- lm(y~x + d, data = data) anova(fit) Analysis of Variance Table Response: y Df Sum Sq Mean Sq F value Pr(&gt;F) x 1 21186 21185.5 89.567 0.00000000000149 *** Residuals 48 11354 236.5 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 4.3.2 Variance inflation factors The variance inflation factor (VIF) is \\(1 / 1‚àíR2\\). A simple approach to identify collinearity among explanatory variables is the use of variance inflation factors (VIF). It is the ratio of variance in a model with multiple terms, divided by the variance of a model with one term alone. The higher the value, the higher the collinearity. A VIF for a single explanatory variable is obtained using the r-squared value of the regression of that variable against all other explanatory variables: A VIF is calculated for each explanatory variable and those with high values are removed. The definition of ‚Äòhigh‚Äô is somewhat arbitrary, but values in the range of 5-10 are commonly used for ‚Äòhigh.‚Äô If VIF value exceeding 4.0, or by tolerance less than 0.2 then there is a problem with multicollinearity [@JHair2013]. However, it depends on the researcher‚Äôs criteria. The lower the VIF the better, but you shouldn‚Äôt be too concerned as long as your VIF is not greater than 10. vif(fit) x d 1 NaN 4.3.3 ANOVA One-way: one value res.aov &lt;- aov(y ~ x, data = data) summary(res.aov) Df Sum Sq Mean Sq F value Pr(&gt;F) x 1 21185 21185 89.57 0.00000000000149 *** Residuals 48 11354 237 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Two-way: more than two factors res.aov &lt;- aov(y ~ x + d, data = data) summary(res.aov) Df Sum Sq Mean Sq F value Pr(&gt;F) x 1 21185 21185 89.57 0.00000000000149 *** Residuals 48 11354 237 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 With interaction res.aov &lt;- aov(y ~ x * d, data = data) summary(res.aov) Df Sum Sq Mean Sq F value Pr(&gt;F) x 1 21185 21185 89.57 0.00000000000149 *** Residuals 48 11354 237 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Three-way Three way With interaction summary(aov(y ~ x + d, data=data)) Df Sum Sq Mean Sq F value Pr(&gt;F) x 1 21185 21185 89.57 0.00000000000149 *** Residuals 48 11354 237 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 summary(aov(y ~ x + d, data=data)) Df Sum Sq Mean Sq F value Pr(&gt;F) x 1 21185 21185 89.57 0.00000000000149 *** Residuals 48 11354 237 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 4.3.4 Linearizing variables logged &lt;- log(iris$Sepal.Length) # non-linear quad &lt;- cars$speed ^ 2 # quadratic References "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
