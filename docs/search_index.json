[["basics-python.html", "Chapter - 6 Basics Python", " Chapter - 6 Basics Python import numpy as np import pandas as pd import matplotlib.pyplot as plt import seaborn as sns ## [1] &quot;.Rhistory&quot; &quot;rsconnect&quot; ## [3] &quot;.DS_Store&quot; &quot;R-Summaries.Rproj&quot; ## [5] &quot;01-Basics.Rmd&quot; &quot;preamble.tex&quot; ## [7] &quot;index.Rmd&quot; &quot;images&quot; ## [9] &quot;02-Charts.Rmd&quot; &quot;Summary_files&quot; ## [11] &quot;08-references.Rmd&quot; &quot;MIT-Coding-Brain-01-press_0.jpeg&quot; ## [13] &quot;packages.bib&quot; &quot;03-Probability.Rmd&quot; ## [15] &quot;_output.yml&quot; &quot;docs&quot; ## [17] &quot;R-Summaries.Rmd&quot; &quot;07-PracticalDataScience.Rmd&quot; ## [19] &quot;www&quot; &quot;04-Simpleregressions.Rmd&quot; ## [21] &quot;_bookdown_files&quot; &quot;README.md&quot; ## [23] &quot;R-Summaries_files&quot; &quot;05-SEM.Rmd&quot; ## [25] &quot;_bookdown.yml&quot; &quot;06-Python.Rmd&quot; ## [27] &quot;.gitignore&quot; &quot;.RData&quot; ## [29] &quot;style.css&quot; &quot;_book&quot; ## [31] &quot;book.bib&quot; &quot;.git&quot; ## [33] &quot;.Rproj.user&quot; variable using instead of &lt;-, equal sign =. y = 5 + 5 y ## [1] 10 Printing characters print(&#39;Hello, readers!&#39;) ## [1] &quot;Hello, readers!&quot; Printing numbers print(15) ## [1] 15 Printing length of a value Length = len(&#39;Danielle&#39;) print(Length) ## 8 6.0.1 Data set Loading the data set &amp; viewing head + tails: sns.set_context(&#39;paper&#39;) tips = sns.load_dataset(&#39;tips&#39;) tips.head() ## total_bill tip sex smoker day time size ## 0 16.99 1.01 Female No Sun Dinner 2 ## 1 10.34 1.66 Male No Sun Dinner 3 ## 2 21.01 3.50 Male No Sun Dinner 3 ## 3 23.68 3.31 Male No Sun Dinner 2 ## 4 24.59 3.61 Female No Sun Dinner 4 tips.tail() ## total_bill tip sex smoker day time size ## 239 29.03 5.92 Male No Sat Dinner 3 ## 240 27.18 2.00 Female Yes Sat Dinner 2 ## 241 22.67 2.00 Male Yes Sat Dinner 2 ## 242 17.82 1.75 Male No Sat Dinner 2 ## 243 18.78 3.00 Female No Thur Dinner 2 Length of the variable Shape: Number of rows and number of columns Type of variables + basic info Descriptive statistics variable len(tips) ## 244 tips.shape ## (244, 7) tips.info() ## &lt;class &#39;pandas.core.frame.DataFrame&#39;&gt; ## RangeIndex: 244 entries, 0 to 243 ## Data columns (total 7 columns): ## # Column Non-Null Count Dtype ## --- ------ -------------- ----- ## 0 total_bill 244 non-null float64 ## 1 tip 244 non-null float64 ## 2 sex 244 non-null category ## 3 smoker 244 non-null category ## 4 day 244 non-null category ## 5 time 244 non-null category ## 6 size 244 non-null int64 ## dtypes: category(4), float64(2), int64(1) ## memory usage: 7.3 KB tips.describe() ## total_bill tip size ## count 244.000000 244.000000 244.000000 ## mean 19.785943 2.998279 2.569672 ## std 8.902412 1.383638 0.951100 ## min 3.070000 1.000000 1.000000 ## 25% 13.347500 2.000000 2.000000 ## 50% 17.795000 2.900000 2.000000 ## 75% 24.127500 3.562500 3.000000 ## max 50.810000 10.000000 6.000000 6.0.2 Matrixes Series: Panda series method: Serie1 = pd.Series( [4200, 8000, 6500], index=[&quot;Amsterdam&quot;, &quot;Toronto&quot;, &quot;Tokyo&quot;] ) Serie1 ## Amsterdam 4200 ## Toronto 8000 ## Tokyo 6500 ## dtype: int64 Python dictionary method: Serie2 = pd.Series({&quot;Amsterdam&quot;: 5, &quot;Tokyo&quot;: 8}) Serie2 ## Amsterdam 5 ## Tokyo 8 ## dtype: int64 Data frame: Combined_serie = pd.DataFrame({ &quot;Revenue&quot;: Serie1, &quot;Employee_count&quot;: Serie2 }) Combined_serie ## Revenue Employee_count ## Amsterdam 4200 5.0 ## Tokyo 6500 8.0 ## Toronto 8000 NaN Sub-setting by row: Combined_serie[&quot;Tokyo&quot;:] ## Revenue Employee_count ## Tokyo 6500 8.0 ## Toronto 8000 NaN 6.0.3 Creating our own functions: Saying hello + name def printing_name(name): print(&#39;Good morning,&#39;, name) printing_name(&#39;Danielle&#39;) ## Good morning, Danielle Multiple arguments: Saying hello + name + location def welcome(name, location): print(&quot;Good morning&quot;, name, &quot;Welcome to&quot;, location) welcome(&quot;Danielle,&quot;, &quot;class.&quot;) ## Good morning Danielle, Welcome to class. 6.0.4 Bar plot sns.set_context(&#39;paper&#39;) tips = sns.load_dataset(&#39;tips&#39;) tips.head() ## total_bill tip sex smoker day time size ## 0 16.99 1.01 Female No Sun Dinner 2 ## 1 10.34 1.66 Male No Sun Dinner 3 ## 2 21.01 3.50 Male No Sun Dinner 3 ## 3 23.68 3.31 Male No Sun Dinner 2 ## 4 24.59 3.61 Female No Sun Dinner 4 sns.barplot(x = &#39;day&#39;, y = &#39;total_bill&#39;, hue = &#39;sex&#39;, data = tips, palette = &#39;Blues&#39;, edgecolor = &#39;w&#39;) tips.groupby([&#39;day&#39;,&#39;sex&#39;]).mean() ## total_bill tip size ## day sex ## Thur Male 18.714667 2.980333 2.433333 ## Female 16.715312 2.575625 2.468750 ## Fri Male 19.857000 2.693000 2.100000 ## Female 14.145556 2.781111 2.111111 ## Sat Male 20.802542 3.083898 2.644068 ## Female 19.680357 2.801786 2.250000 ## Sun Male 21.887241 3.220345 2.810345 ## Female 19.872222 3.367222 2.944444 plt.show() "]]
